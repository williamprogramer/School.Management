@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1" Dense="true">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="() => _drawerOpen = !_drawerOpen" />
        <MudText Typo="Typo.h5" Class="ml-3">Management</MudText>
        <MudSpacer />
        <MudMenu AnchorOrigin="Origin.TopLeft" TransformOrigin="Origin.TopLeft">
            <ActivatorContent>
                <MudAvatar>
                    <MudImage Src="logo.png" Alt="Logo" />
                </MudAvatar>
            </ActivatorContent>
            <ChildContent>
                <MudMenuItem OnClick="Logout" OnTouch="Logout" Icon="@Icons.Material.Filled.Logout" IconColor="Color.Primary">Salir</MudMenuItem>
            </ChildContent>
        </MudMenu>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <MudPaper Elevation="0">
            <MudNavMenu Rounded="true" Margin="Margin.Dense" Color="Color.Primary" Class="pa-2" Bordered="true">
                <MudNavLink Href="/" Icon="@Icons.Material.Filled.Dashboard">Panel de control</MudNavLink>
                <AuthorizeView Roles="Administrator">
                    <MudNavGroup Title="Mantenimientos" Expanded="false">
                        <MudNavLink Href="/Maintenances/Administrators" Icon="@Icons.Material.Filled.Groups">Administradores</MudNavLink>
                    </MudNavGroup>
                </AuthorizeView>
            </MudNavMenu>
        </MudPaper>
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-2">
            <ErrorBoundary @ref="@_errorBoundary" Context="Exception">
                <ChildContent>
                    @Body
                </ChildContent>
                <ErrorContent>
                    <div class="alert bg-danger text-white alert-dismissible">
                        @Exception.GetType(): @Exception.Message
                        <button class="btn-close" @onclick="Recover"></button>
                    </div>
                </ErrorContent>
            </ErrorBoundary>
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private bool _drawerOpen = true;

    private ErrorBoundary? _errorBoundary;

    protected override void OnParametersSet()
    {
        if (_errorBoundary is not null)
            _errorBoundary.Recover();
    }

    private void Recover()
    {
        if (_errorBoundary is not null)
            _errorBoundary.Recover();
    }

    private void Logout()
    {
        _ = ((AppAuthenticationStateProvider)AuthenticationStateProvider).LogoutAsync();
    }
}